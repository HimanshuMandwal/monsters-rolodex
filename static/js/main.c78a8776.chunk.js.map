{"version":3,"sources":["components/card/card.components.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleOnChange","onChange","type","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAO,SAACC,GACjB,OACI,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCJjBC,G,MAAW,SAACR,GAErB,OADAS,QAAQC,IAAIV,GAER,qBAAKC,UAAY,YAAjB,SACKD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAC5B,cAAC,EAAD,CAAwBA,QAAUA,GAAtBA,EAAQC,WCFlBQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,eAAd,OACrB,uBAAOd,UAAU,UAAUe,SAAYD,EAAgBE,KAAK,SAASH,YAAaA,MCqDvEI,E,kDAvDb,aAAe,IAAD,8BACZ,gBAoBFH,eAAiB,SAACI,GAChB,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SApBrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAY,IAJF,E,gEAcO,IAAD,OAClBI,MAAM,6CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,+BAc/B,IAAD,EAC0BC,KAAKN,MAA/Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAEjD,OACC,sBAAKhC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWa,YAAc,iBAAiBC,eAAiBe,KAAKf,iBAChE,cAAC,EAAD,CAAUJ,SAAYoB,W,GAzCZI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1BZ,M","file":"static/js/main.c78a8776.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = (props) => {\n    return (\n        <div className = \"card-container\">\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n            <h2>{props.monster.name }</h2>\n            <p>{props.monster.email}</p>\n\n        </div>\n    )\n}","import React from 'react';\nimport { Card } from '../card/card.components';\nimport './card-list.styles.css';\n\nexport const CardList = (props) => {\n    console.log(props);\n    return (\n        <div className = 'card-list'>\n           { props.monsters.map(monster =>(\n           <Card  key={monster.id} monster ={monster}/>\n           ))}\n        </div>\n    )\n};","import React from \"react\";\n\nimport './search-box.styles.css';\n\n/* a functional compnent is component where we just want to return the Html\ncode dont need the state and other lifecycle methods  */\n\nexport const SearchBox = ({placeholder,handleOnChange}) => (\n    <input className=\"search \" onChange = {handleOnChange} type=\"search\" placeholder={placeholder}/>\n)\n\n//this searchBox is made a reusable component as it takes the placeholder as well as other things to be dynamic","import React,{ Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from'./components/search-box/search-box.component';\n\nclass App extends Component {  //using this class we can get the access of something called as state which is initialised in the constructor\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField:\"\"\n    };\n\n    //this.handleOnChange = this.handleOnChange.bind(this);\n    //explicitly define that the handlechange is bind to this of the App class by default\n    //in javascript the function is independent of taking the context of anything\n    // as this will be hactic that for every method we have to do this to get rid of this we use arrow function which will automatically have the context of the in which they are written\n  }\n\n  /* this keyword in javascript represent the context in which it is invoked s */\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  //handleOnChange (e) {} to the arrow function\n  handleOnChange = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n\n\n\n\n  //this.setState() is a asyncronous function call but to see the changes that wheather the state is\n  //changing properly using this.setState() we have a call back function as this.setState({}.()=>{}) which will execute after the state has been changed\n  // this is made asynchronous because react automatically chose the best time to update the things\n   render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n     return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox placeholder = \"search monster\" handleOnChange= {this.handleOnChange}/>\n        <CardList monsters = {filteredMonsters}/>\n    </div>\n     )\n   }\n}\n\n\n\n// function App() {\n//   return (\n\n//   );\n// }\n//  <input onChange = {e => this.setState({searchField:e.target.value})} type=\"search\" placeholder=\"search monster\"/>\n// here we are sending the function not calling it as this is trigred only when the onChange occurs this onChange is a \"Synthetic event\"\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n//this library App is going to raplace the element having the ID as root that is a div inside the body that is going to be render\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}